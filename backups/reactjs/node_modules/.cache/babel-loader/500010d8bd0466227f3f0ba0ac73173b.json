{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/wd5-2107-FamilySocialApp/reactjs/src/pages/post/index.js\";\nimport styles from './post.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Control, Field, TextArea } from 'bloomer';\nimport moment from 'moment';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\nimport PostDetails from '../../components/postDetails';\nimport PostSlugline from '../../components/postSlugline';\nimport examplePosts from '../../mochDatabase/posts.json';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        addComment,\n        post: {\n          id\n        }\n      } = this.props;\n      const {\n        newComment\n      } = this.state;\n      addComment({\n        postId: id,\n        text: newComment\n      });\n      this.setState({\n        focused: false,\n        newComment: ''\n      });\n    };\n\n    this.handleInputChange = event => {\n      // pull the name of the input and value of input out of the event object\n      const {\n        target: {\n          name,\n          value\n        }\n      } = event; // update the state to a key of the name of the input and value of the value of the input\n      // ex: type: 'private'\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    const {\n      fetchPost,\n      match: {\n        params: {\n          postId\n        }\n      }\n    } = props;\n    this.state = {\n      focused: false,\n      newComment: ''\n    };\n    fetchPost(postId);\n  }\n\n  render() {\n    const {\n      comments,\n      loggedIn,\n      post\n    } = this.props;\n    const {\n      focused,\n      newComment\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.contentBox,\n      children: [/*#__PURE__*/_jsxDEV(\"article\", {\n        className: styles.post,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.heading,\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostSlugline, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.content,\n          children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n            source: post.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostDetails, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: styles.subTitle,\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), loggedIn && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          children: /*#__PURE__*/_jsxDEV(Control, {\n            children: /*#__PURE__*/_jsxDEV(TextArea, {\n              placeholder: \"Add a comment\",\n              className: styles.commentInput,\n              onChange: this.handleInputChange,\n              value: newComment,\n              name: \"newComment\",\n              rows: \"2\",\n              onFocus: () => this.setState({\n                focused: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), focused && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), !loggedIn && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), ` or `, /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: \"Sign up \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), \"to create a comment\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.comment,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: comment.User.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), ` ${moment(comment.createdAt).fromNow()}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.commentContent,\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nPost.propTypes = {\n  addComment: PropTypes.func,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    content: PropTypes.string\n  })),\n  fetchPost: PropTypes.func,\n  loggedIn: PropTypes.bool,\n  post: PropTypes.shape({\n    commentCount: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    events: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    title: PropTypes.string,\n    user: PropTypes.shape({\n      username: PropTypes.string\n    }),\n    votes: PropTypes.arrayOf(PropTypes.shape({\n      userId: PropTypes.string,\n      vote: PropTypes.number\n    }))\n  })\n};\nPost.defaultProps = {\n  addComment: () => {},\n  comments: [{\n    content: 'Thanks for all the helpful resources!',\n    createdAt: '2020-03-18 10:00:00.000',\n    id: 'b04652f7-07fe-4211-8117-71448bf1a336',\n    User: {\n      username: 'rhigleyfs'\n    },\n    userId: '26d5689d-b15b-4a94-a699-44b3e0fdc401'\n  }, {\n    content: 'These are all awesome links!',\n    createdAt: '2020-03-22 10:00:00.000',\n    id: '06bd9f41-1ded-40ef-bb2b-ac66017bbbae',\n    User: {\n      username: 'brandonbrown'\n    },\n    userId: '4f0a2a9e-1c08-4d22-8586-cbeb369c6e50'\n  }],\n  fetchPost: () => {},\n  loggedIn: true,\n  post: examplePosts[0]\n};\nexport default Post;","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/wd5-2107-FamilySocialApp/reactjs/src/pages/post/index.js"],"names":["styles","React","PropTypes","Control","Field","TextArea","moment","ReactMarkdown","Link","PostDetails","PostSlugline","examplePosts","Post","Component","constructor","props","onSubmit","e","preventDefault","addComment","post","id","newComment","state","postId","text","setState","focused","handleInputChange","event","target","name","value","fetchPost","match","params","render","comments","loggedIn","contentBox","heading","title","content","subTitle","commentInput","button","map","comment","User","username","createdAt","fromNow","commentContent","propTypes","func","arrayOf","shape","string","bool","commentCount","number","events","object","user","votes","userId","vote","defaultProps"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,QAAzB,QAAyC,SAAzC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,QAZmB,GAYPC,CAAD,IAAO;AAChBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAM;AACJC,QAAAA,UADI;AAEJC,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAFF,UAGF,KAAKN,KAHT;AAIA,YAAM;AAAEO,QAAAA;AAAF,UAAiB,KAAKC,KAA5B;AACAJ,MAAAA,UAAU,CAAC;AAAEK,QAAAA,MAAM,EAAEH,EAAV;AAAcI,QAAAA,IAAI,EAAEH;AAApB,OAAD,CAAV;AACA,WAAKI,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBL,QAAAA,UAAU,EAAE;AAA9B,OAAd;AACD,KArBkB;;AAAA,SAuBnBM,iBAvBmB,GAuBEC,KAAD,IAAW;AAC7B;AACA,YAAM;AACJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,IAAF;AAAQC,UAAAA;AAAR;AADJ,UAEFH,KAFJ,CAF6B,CAK7B;AACA;;AACA,WAAKH,QAAL,CAAc;AACZ,SAACK,IAAD,GAAQC;AADI,OAAd;AAGD,KAjCkB;;AAEjB,UAAM;AACJC,MAAAA,SADI;AAEJC,MAAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE;AAAEX,UAAAA;AAAF;AADH;AAFH,QAKFT,KALJ;AAMA,SAAKQ,KAAL,GAAa;AAAEI,MAAAA,OAAO,EAAE,KAAX;AAAkBL,MAAAA,UAAU,EAAE;AAA9B,KAAb;AACAW,IAAAA,SAAS,CAACT,MAAD,CAAT;AACD;;AAyBDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBlB,MAAAA;AAAtB,QAA+B,KAAKL,KAA1C;AACA,UAAM;AAAEY,MAAAA,OAAF;AAAWL,MAAAA;AAAX,QAA0B,KAAKC,KAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAEvB,MAAM,CAACuC,UAAvB;AAAA,8BACE;AAAS,QAAA,SAAS,EAAEvC,MAAM,CAACoB,IAA3B;AAAA,gCACE;AAAI,UAAA,SAAS,EAAEpB,MAAM,CAACwC,OAAtB;AAAA,oBAAgCpB,IAAI,CAACqB;AAArC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,IAAI,EAAErB;AAApB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAEpB,MAAM,CAAC0C,OAAvB;AAAA,iCACE,QAAC,aAAD;AAAe,YAAA,MAAM,EAAEtB,IAAI,CAACsB;AAA5B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF,eAME,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEtB;AAAnB;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eASE;AAAI,QAAA,SAAS,EAAEpB,MAAM,CAAC2C,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,EAUGL,QAAQ,iBACP;AAAM,QAAA,QAAQ,EAAE,KAAKtB,QAArB;AAAA,gCACE,QAAC,KAAD;AAAA,iCACE,QAAC,OAAD;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,WAAW,EAAC,eADd;AAEE,cAAA,SAAS,EAAEhB,MAAM,CAAC4C,YAFpB;AAGE,cAAA,QAAQ,EAAE,KAAKhB,iBAHjB;AAIE,cAAA,KAAK,EAAEN,UAJT;AAKE,cAAA,IAAI,EAAC,YALP;AAME,cAAA,IAAI,EAAC,GANP;AAOE,cAAA,OAAO,EAAE,MAAM,KAAKI,QAAL,CAAc;AAAEC,gBAAAA,OAAO,EAAE;AAAX,eAAd;AAPjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAcGA,OAAO,iBACN;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAE3B,MAAM,CAAC6C,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,EAgCG,CAACP,QAAD,iBACC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEI,MAFJ,eAGE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ,EAyCGD,QAAQ,CAACS,GAAT,CAAcC,OAAD,iBACZ;AAAK,QAAA,SAAS,EAAE/C,MAAM,CAAC+C,OAAvB;AAAA,gCACE;AAAA,kCACE;AAAA,sBAASA,OAAO,CAACC,IAAR,CAAaC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBADF,EAEI,IAAG3C,MAAM,CAACyC,OAAO,CAACG,SAAT,CAAN,CAA0BC,OAA1B,EAAoC,EAF3C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE;AAAG,UAAA,SAAS,EAAEnD,MAAM,CAACoD,cAArB;AAAA,oBAAsCL,OAAO,CAACL;AAA9C;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,SAAqCK,OAAO,CAAC1B,EAA7C;AAAA;AAAA;AAAA;AAAA,cADD,CAzCH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqDD;;AA5FgC;;AA+FnCT,IAAI,CAACyC,SAAL,GAAiB;AACflC,EAAAA,UAAU,EAAEjB,SAAS,CAACoD,IADP;AAEfjB,EAAAA,QAAQ,EAAEnC,SAAS,CAACqD,OAAV,CACRrD,SAAS,CAACsD,KAAV,CAAgB;AACdd,IAAAA,OAAO,EAAExC,SAAS,CAACuD;AADL,GAAhB,CADQ,CAFK;AAOfxB,EAAAA,SAAS,EAAE/B,SAAS,CAACoD,IAPN;AAQfhB,EAAAA,QAAQ,EAAEpC,SAAS,CAACwD,IARL;AASftC,EAAAA,IAAI,EAAElB,SAAS,CAACsD,KAAV,CAAgB;AACpBG,IAAAA,YAAY,EAAEzD,SAAS,CAAC0D,MADJ;AAEpBlB,IAAAA,OAAO,EAAExC,SAAS,CAACuD,MAFC;AAGpBP,IAAAA,SAAS,EAAEhD,SAAS,CAACuD,MAHD;AAIpBI,IAAAA,MAAM,EAAE3D,SAAS,CAACqD,OAAV,CAAkBrD,SAAS,CAAC4D,MAA5B,CAJY;AAKpBzC,IAAAA,EAAE,EAAEnB,SAAS,CAACuD,MALM;AAMpBhB,IAAAA,KAAK,EAAEvC,SAAS,CAACuD,MANG;AAOpBM,IAAAA,IAAI,EAAE7D,SAAS,CAACsD,KAAV,CAAgB;AACpBP,MAAAA,QAAQ,EAAE/C,SAAS,CAACuD;AADA,KAAhB,CAPc;AAUpBO,IAAAA,KAAK,EAAE9D,SAAS,CAACqD,OAAV,CACLrD,SAAS,CAACsD,KAAV,CAAgB;AACdS,MAAAA,MAAM,EAAE/D,SAAS,CAACuD,MADJ;AAEdS,MAAAA,IAAI,EAAEhE,SAAS,CAAC0D;AAFF,KAAhB,CADK;AAVa,GAAhB;AATS,CAAjB;AA4BAhD,IAAI,CAACuD,YAAL,GAAoB;AAClBhD,EAAAA,UAAU,EAAE,MAAM,CAAE,CADF;AAElBkB,EAAAA,QAAQ,EAAE,CACR;AACEK,IAAAA,OAAO,EAAE,uCADX;AAEEQ,IAAAA,SAAS,EAAE,yBAFb;AAGE7B,IAAAA,EAAE,EAAE,sCAHN;AAIE2B,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAJR;AAOEgB,IAAAA,MAAM,EAAE;AAPV,GADQ,EAUR;AACEvB,IAAAA,OAAO,EAAE,8BADX;AAEEQ,IAAAA,SAAS,EAAE,yBAFb;AAGE7B,IAAAA,EAAE,EAAE,sCAHN;AAIE2B,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE;AADN,KAJR;AAOEgB,IAAAA,MAAM,EAAE;AAPV,GAVQ,CAFQ;AAsBlBhC,EAAAA,SAAS,EAAE,MAAM,CAAE,CAtBD;AAuBlBK,EAAAA,QAAQ,EAAE,IAvBQ;AAwBlBlB,EAAAA,IAAI,EAAET,YAAY,CAAC,CAAD;AAxBA,CAApB;AA2BA,eAAeC,IAAf","sourcesContent":["import styles from './post.module.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Control, Field, TextArea } from 'bloomer';\nimport moment from 'moment';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nimport PostDetails from '../../components/postDetails';\nimport PostSlugline from '../../components/postSlugline';\nimport examplePosts from '../../mochDatabase/posts.json';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      fetchPost,\n      match: {\n        params: { postId },\n      },\n    } = props;\n    this.state = { focused: false, newComment: '' };\n    fetchPost(postId);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const {\n      addComment,\n      post: { id },\n    } = this.props;\n    const { newComment } = this.state;\n    addComment({ postId: id, text: newComment });\n    this.setState({ focused: false, newComment: '' });\n  };\n\n  handleInputChange = (event) => {\n    // pull the name of the input and value of input out of the event object\n    const {\n      target: { name, value },\n    } = event;\n    // update the state to a key of the name of the input and value of the value of the input\n    // ex: type: 'private'\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { comments, loggedIn, post } = this.props;\n    const { focused, newComment } = this.state;\n    return (\n      <div className={styles.contentBox}>\n        <article className={styles.post}>\n          <h1 className={styles.heading}>{post.title}</h1>\n          <PostSlugline post={post} />\n          <div className={styles.content}>\n            <ReactMarkdown source={post.content} />\n          </div>\n          <PostDetails post={post} />\n        </article>\n        <h2 className={styles.subTitle}>Comments</h2>\n        {loggedIn && (\n          <form onSubmit={this.onSubmit}>\n            <Field>\n              <Control>\n                <TextArea\n                  placeholder=\"Add a comment\"\n                  className={styles.commentInput}\n                  onChange={this.handleInputChange}\n                  value={newComment}\n                  name=\"newComment\"\n                  rows=\"2\"\n                  onFocus={() => this.setState({ focused: true })}\n                />\n              </Control>\n            </Field>\n            {focused && (\n              <button type=\"submit\" className={styles.button}>\n                Post Comment\n              </button>\n            )}\n          </form>\n        )}\n        {!loggedIn && (\n          <p>\n            <Link to=\"/login\">Login</Link>\n            {` or `}\n            <Link to=\"/signup\">Sign up </Link>\n            to create a comment\n          </p>\n        )}\n\n        {comments.map((comment) => (\n          <div className={styles.comment} key={comment.id}>\n            <p>\n              <strong>{comment.User.username}</strong>\n              {` ${moment(comment.createdAt).fromNow()}`}\n            </p>\n            <p className={styles.commentContent}>{comment.content}</p>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nPost.propTypes = {\n  addComment: PropTypes.func,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      content: PropTypes.string,\n    })\n  ),\n  fetchPost: PropTypes.func,\n  loggedIn: PropTypes.bool,\n  post: PropTypes.shape({\n    commentCount: PropTypes.number,\n    content: PropTypes.string,\n    createdAt: PropTypes.string,\n    events: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.string,\n    title: PropTypes.string,\n    user: PropTypes.shape({\n      username: PropTypes.string,\n    }),\n    votes: PropTypes.arrayOf(\n      PropTypes.shape({\n        userId: PropTypes.string,\n        vote: PropTypes.number,\n      })\n    ),\n  }),\n};\n\nPost.defaultProps = {\n  addComment: () => {},\n  comments: [\n    {\n      content: 'Thanks for all the helpful resources!',\n      createdAt: '2020-03-18 10:00:00.000',\n      id: 'b04652f7-07fe-4211-8117-71448bf1a336',\n      User: {\n        username: 'rhigleyfs',\n      },\n      userId: '26d5689d-b15b-4a94-a699-44b3e0fdc401',\n    },\n    {\n      content: 'These are all awesome links!',\n      createdAt: '2020-03-22 10:00:00.000',\n      id: '06bd9f41-1ded-40ef-bb2b-ac66017bbbae',\n      User: {\n        username: 'brandonbrown',\n      },\n      userId: '4f0a2a9e-1c08-4d22-8586-cbeb369c6e50',\n    },\n  ],\n  fetchPost: () => {},\n  loggedIn: true,\n  post: examplePosts[0],\n};\n\nexport default Post;\n"]},"metadata":{},"sourceType":"module"}