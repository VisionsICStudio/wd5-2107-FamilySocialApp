{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/FullSailUniversity/wd6-2103-VisionsICStudio/reactjs/src/components/postDetails/index.js\";\nimport styles from './postDetails.module.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Tag } from 'bloomer';\nimport { Link } from 'react-router-dom';\n\nfunction PostDetails({\n  addVote,\n  currentUserId,\n  loggedIn,\n  post\n}) {\n  // direction being 1 if up vote and -1 if down vote\n  const onVoteClick = direction => e => {\n    e.preventDefault();\n    addVote({\n      direction,\n      postId: post.id\n    });\n  }; // has this user voted?\n\n\n  const isSelected = (votes, direction) => {\n    if (!loggedIn) return 'is-disabled';\n    const vote = votes.find(v => v.userId === currentUserId); // the current user voted for this post and this direction\n\n    if (vote && vote.direction === direction) return 'is-selected'; // the current user voted for this post but not this direction\n\n    if (vote) return 'is-disabled'; // the current user did not vote for this post\n\n    return 'is-active';\n  }; // calculate the votes based on the array of votes\n\n\n  const totalVotes = votes => votes.map(vote => vote.direction).reduce((a, b) => a + b, 0);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.details,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.tags,\n      children: post.tags.map(tag => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/tags/${tag.id}`,\n        children: /*#__PURE__*/_jsxDEV(Tag, {\n          children: `#${tag.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, tag.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.meta,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: `fa fa-arrow-up ${isSelected(post.votes, 1)}`,\n        onClick: onVoteClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), totalVotes(post.votes), /*#__PURE__*/_jsxDEV(Icon, {\n        className: `fa fa-arrow-down ${isSelected(post.votes, -1)}`,\n        onClick: onVoteClick(-1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), `  ${post.commentCount}`, /*#__PURE__*/_jsxDEV(Icon, {\n        className: \"fa fa-comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = PostDetails;\nPostDetails.propTypes = {\n  addVote: PropTypes.func,\n  currentUserId: PropTypes.string,\n  loggedIn: PropTypes.bool,\n  post: PropTypes.shape({\n    commentCount: PropTypes.number,\n    createdAt: PropTypes.string,\n    id: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    user: PropTypes.shape({\n      username: PropTypes.string\n    }),\n    votes: PropTypes.arrayOf(PropTypes.shape({\n      userId: PropTypes.string,\n      vote: PropTypes.number\n    }))\n  })\n};\nPostDetails.defaultProps = {\n  addVote: () => {},\n  currentUserId: 'ed7586f6-6022-487a-b7f0-404fa3c2da13',\n  loggedIn: true,\n  post: {}\n};\nexport default PostDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetails\");","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/FullSailUniversity/wd6-2103-VisionsICStudio/reactjs/src/components/postDetails/index.js"],"names":["styles","React","PropTypes","Icon","Tag","Link","PostDetails","addVote","currentUserId","loggedIn","post","onVoteClick","direction","e","preventDefault","postId","id","isSelected","votes","vote","find","v","userId","totalVotes","map","reduce","a","b","details","tags","tag","name","meta","commentCount","propTypes","func","string","bool","shape","number","createdAt","arrayOf","object","title","user","username","defaultProps"],"mappings":"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","sourcesContent":["import styles from './postDetails.module.css';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Icon, Tag } from 'bloomer';\nimport { Link } from 'react-router-dom';\n\nfunction PostDetails({ addVote, currentUserId, loggedIn, post }) {\n  // direction being 1 if up vote and -1 if down vote\n  const onVoteClick = (direction) => (e) => {\n    e.preventDefault();\n    addVote({ direction, postId: post.id });\n  };\n\n  // has this user voted?\n  const isSelected = (votes, direction) => {\n    if (!loggedIn) return 'is-disabled';\n    const vote = votes.find((v) => v.userId === currentUserId);\n    // the current user voted for this post and this direction\n    if (vote && vote.direction === direction) return 'is-selected';\n    // the current user voted for this post but not this direction\n    if (vote) return 'is-disabled';\n    // the current user did not vote for this post\n    return 'is-active';\n  };\n\n  // calculate the votes based on the array of votes\n  const totalVotes = (votes) =>\n    votes.map((vote) => vote.direction).reduce((a, b) => a + b, 0);\n\n  return (\n    <div className={styles.details}>\n      <div className={styles.tags}>\n        {post.tags.map((tag) => (\n          <Link key={tag.id} to={`/tags/${tag.id}`}>\n            <Tag>{`#${tag.name}`}</Tag>\n          </Link>\n        ))}\n      </div>\n      <div className={styles.meta}>\n        <Icon\n          className={`fa fa-arrow-up ${isSelected(post.votes, 1)}`}\n          onClick={onVoteClick(1)}\n        />\n        {totalVotes(post.votes)}\n        <Icon\n          className={`fa fa-arrow-down ${isSelected(post.votes, -1)}`}\n          onClick={onVoteClick(-1)}\n        />\n        {`  ${post.commentCount}`}\n        <Icon className=\"fa fa-comment\" />\n      </div>\n    </div>\n  );\n}\n\nPostDetails.propTypes = {\n  addVote: PropTypes.func,\n  currentUserId: PropTypes.string,\n  loggedIn: PropTypes.bool,\n  post: PropTypes.shape({\n    commentCount: PropTypes.number,\n    createdAt: PropTypes.string,\n    id: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n    user: PropTypes.shape({\n      username: PropTypes.string,\n    }),\n    votes: PropTypes.arrayOf(\n      PropTypes.shape({\n        userId: PropTypes.string,\n        vote: PropTypes.number,\n      })\n    ),\n  }),\n};\n\nPostDetails.defaultProps = {\n  addVote: () => {},\n  currentUserId: 'ed7586f6-6022-487a-b7f0-404fa3c2da13',\n  loggedIn: true,\n  post: {},\n};\n\nexport default PostDetails;\n"]},"metadata":{},"sourceType":"module"}