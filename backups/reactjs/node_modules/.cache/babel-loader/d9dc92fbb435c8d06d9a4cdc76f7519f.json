{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/wd5-2107-FamilySocialApp/reactjs/src/pages/settings/index.js\";\nimport '@marcioferlan/react-profile-picture/build/ProfilePicture.css';\nimport styles from './settings.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ProfilePicture from '@marcioferlan/react-profile-picture';\nimport { Button, Control, Field, Image, Input, Label } from 'bloomer';\nimport userData from '../../exampleData/users.json';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      // pull the name of the input and value of input out of the event object\n      const {\n        target: {\n          name,\n          value\n        }\n      } = event; // update the state to a key of the name of the input and value of the value of the input\n      // ex: type: 'private'\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      const {\n        saveUser\n      } = this.props;\n      const {\n        avatar,\n        city,\n        state,\n        username\n      } = this.state;\n      const PP = this.profilePictureRef.current;\n      saveUser({\n        avatar: PP ? PP.getImageAsDataUrl() : avatar,\n        city,\n        state,\n        username\n      });\n    };\n\n    this.state = {};\n    this.profilePictureRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      fetchUser\n    } = this.props;\n    fetchUser();\n  }\n\n  render() {\n    const {\n      user: {\n        avatar: defaultAvatar = '',\n        city: defaultCity = '',\n        state: defaultState = '',\n        username: defaultUsername = ''\n      }\n    } = this.props;\n    const {\n      avatar = defaultAvatar,\n      city = defaultCity,\n      state = defaultState,\n      username = defaultUsername,\n      showUpload = false\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.heading,\n        children: \"Your Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.profilePic,\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: styles.label,\n          children: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), (showUpload || !avatar) && /*#__PURE__*/_jsxDEV(ProfilePicture, {\n          ref: this.profilePictureRef,\n          frameFormat: \"circle\",\n          minImageSize: 64,\n          frameSize: 64\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), avatar && !showUpload && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: avatar,\n            className: styles.avatar\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              this.setState({\n                showUpload: true\n              });\n            },\n            className: styles.button,\n            children: \"Change Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: styles.label,\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Control, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            className: styles.input,\n            name: \"username\",\n            value: username,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: styles.label,\n          children: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Control, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            className: styles.input,\n            name: \"city\",\n            value: city,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          className: styles.label,\n          children: \"State\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Control, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            className: styles.input,\n            name: \"state\",\n            value: state,\n            onChange: this.handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.button,\n        type: \"submit\",\n        children: \"Save Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nSettings.propTypes = {\n  fetchUser: PropTypes.func,\n  saveUser: PropTypes.func,\n  user: PropTypes.shape({\n    avatar: PropTypes.string,\n    city: PropTypes.string,\n    events: PropTypes.arrayOf(PropTypes.object),\n    state: PropTypes.string,\n    username: PropTypes.string\n  })\n};\nSettings.defaultProps = {\n  fetchUser: () => {},\n  saveUser: () => {},\n  user: userData[3]\n};\nexport default Settings;","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/wd5-2107-FamilySocialApp/reactjs/src/pages/settings/index.js"],"names":["styles","React","Component","PropTypes","ProfilePicture","Button","Control","Field","Image","Input","Label","userData","Settings","constructor","props","handleInputChange","event","target","name","value","setState","onSubmit","e","preventDefault","saveUser","avatar","city","state","username","PP","profilePictureRef","current","getImageAsDataUrl","createRef","componentDidMount","fetchUser","render","user","defaultAvatar","defaultCity","defaultState","defaultUsername","showUpload","form","heading","profilePic","label","button","input","propTypes","func","shape","string","events","arrayOf","object","defaultProps"],"mappings":"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","sourcesContent":["import '@marcioferlan/react-profile-picture/build/ProfilePicture.css';\nimport styles from './settings.module.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport ProfilePicture from '@marcioferlan/react-profile-picture';\nimport { Button, Control, Field, Image, Input, Label } from 'bloomer';\n\nimport userData from '../../exampleData/users.json';\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.profilePictureRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { fetchUser } = this.props;\n    fetchUser();\n  }\n\n  handleInputChange = (event) => {\n    // pull the name of the input and value of input out of the event object\n    const {\n      target: { name, value },\n    } = event;\n    // update the state to a key of the name of the input and value of the value of the input\n    // ex: type: 'private'\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const { saveUser } = this.props;\n    const { avatar, city, state, username } = this.state;\n\n    const PP = this.profilePictureRef.current;\n    saveUser({\n      avatar: PP ? PP.getImageAsDataUrl() : avatar,\n      city,\n      state,\n      username,\n    });\n  };\n\n  render() {\n    const {\n      user: {\n        avatar: defaultAvatar = '',\n        city: defaultCity = '',\n        state: defaultState = '',\n        username: defaultUsername = '',\n      },\n    } = this.props;\n    const {\n      avatar = defaultAvatar,\n      city = defaultCity,\n      state = defaultState,\n      username = defaultUsername,\n      showUpload = false,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit} className={styles.form}>\n        <h1 className={styles.heading}>Your Settings</h1>\n        <div className={styles.profilePic}>\n          <Label className={styles.label}>Avatar</Label>\n          {(showUpload || !avatar) && (\n            <ProfilePicture\n              ref={this.profilePictureRef}\n              frameFormat=\"circle\"\n              minImageSize={64}\n              frameSize={64}\n            />\n          )}\n          {avatar && !showUpload && (\n            <>\n              <Image src={avatar} className={styles.avatar} />\n              <Button\n                onClick={() => {\n                  this.setState({ showUpload: true });\n                }}\n                className={styles.button}\n              >\n                Change Avatar\n              </Button>\n            </>\n          )}\n        </div>\n        <Field>\n          <Label className={styles.label}>Username</Label>\n          <Control>\n            <Input\n              className={styles.input}\n              name=\"username\"\n              value={username}\n              onChange={this.handleInputChange}\n            />\n          </Control>\n        </Field>\n        <Field>\n          <Label className={styles.label}>City</Label>\n          <Control>\n            <Input\n              className={styles.input}\n              name=\"city\"\n              value={city}\n              onChange={this.handleInputChange}\n            />\n          </Control>\n        </Field>\n        <Field>\n          <Label className={styles.label}>State</Label>\n          <Control>\n            <Input\n              className={styles.input}\n              name=\"state\"\n              value={state}\n              onChange={this.handleInputChange}\n            />\n          </Control>\n        </Field>\n        <Button className={styles.button} type=\"submit\">\n          Save Settings\n        </Button>\n      </form>\n    );\n  }\n}\n\nSettings.propTypes = {\n  fetchUser: PropTypes.func,\n  saveUser: PropTypes.func,\n  user: PropTypes.shape({\n    avatar: PropTypes.string,\n    city: PropTypes.string,\n    events: PropTypes.arrayOf(PropTypes.object),\n    state: PropTypes.string,\n    username: PropTypes.string,\n  }),\n};\n\nSettings.defaultProps = {\n  fetchUser: () => {},\n  saveUser: () => {},\n  user: userData[3],\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}