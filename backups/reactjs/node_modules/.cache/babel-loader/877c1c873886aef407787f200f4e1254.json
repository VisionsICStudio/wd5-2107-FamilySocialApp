{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/FullSailUniversity/wd6-2103-VisionsICStudio/reactjs/src/pages/profile/index.js\";\nimport styles from './profile.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Image, Tag } from 'bloomer';\nimport { Link } from 'react-router-dom';\nimport PostList from '../../components/postList';\nimport postData from '../../exampleData/posts.json';\nimport userData from '../../exampleData/users';\n\nclass Profile extends Component {\n  componentDidMount() {\n    const {\n      fetchUser,\n      match: {\n        params: {\n          userId\n        }\n      }\n    } = this.props;\n    fetchUser(userId);\n  }\n\n  render() {\n    const {\n      posts,\n      user\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.profile,\n        children: [/*#__PURE__*/_jsxDEV(Image, {\n          isSize: \"64x64\",\n          src: user.avatar,\n          className: styles.avatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.heading,\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.subTitle,\n          children: [' ', user.city, ', ', user.state]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.tags,\n          children: [\"Watched Tags:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), user.tags.map(tag => /*#__PURE__*/_jsxDEV(Link, {\n            to: `/tags/${tag.id}`,\n            children: /*#__PURE__*/_jsxDEV(Tag, {\n              children: `#${tag.name}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, tag.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.title,\n          children: [user.username, \"'s Posts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nProfile.propTypes = {\n  fetchUser: PropTypes.func,\n  posts: PropTypes.arrayOf(PropTypes.object),\n  user: PropTypes.shape({\n    avatar: PropTypes.string,\n    city: PropTypes.string,\n    state: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object),\n    username: PropTypes.string\n  })\n};\nProfile.defaultProps = {\n  fetchUser: () => {},\n  posts: postData.filter(post => post.user.username === 'eMediaLab'),\n  user: { ...userData[2],\n    username: 'eMediaLab'\n  }\n};\nexport default Profile;","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/FullSailUniversity/wd6-2103-VisionsICStudio/reactjs/src/pages/profile/index.js"],"names":["styles","React","Component","PropTypes","Image","Tag","Link","PostList","postData","userData","Profile","componentDidMount","fetchUser","match","params","userId","props","render","posts","user","profile","avatar","heading","username","subTitle","city","state","tags","map","tag","id","name","title","propTypes","func","arrayOf","object","shape","string","defaultProps","filter","post"],"mappings":"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","sourcesContent":["import styles from './profile.module.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Image, Tag } from 'bloomer';\nimport { Link } from 'react-router-dom';\n\nimport PostList from '../../components/postList';\nimport postData from '../../exampleData/posts.json';\nimport userData from '../../exampleData/users';\n\nclass Profile extends Component {\n  componentDidMount() {\n    const {\n      fetchUser,\n      match: {\n        params: { userId },\n      },\n    } = this.props;\n    fetchUser(userId);\n  }\n\n  render() {\n    const { posts, user } = this.props;\n    return (\n      <>\n        <div className={styles.profile}>\n          <Image isSize=\"64x64\" src={user.avatar} className={styles.avatar} />\n          <h1 className={styles.heading}>{user.username}</h1>\n          <p className={styles.subTitle}>\n            {' '}\n            {user.city}\n            {', '}\n            {user.state}\n          </p>\n          <p className={styles.tags}>\n            Watched Tags:\n            <br />\n            {user.tags.map((tag) => (\n              <Link key={tag.id} to={`/tags/${tag.id}`}>\n                <Tag>{`#${tag.name}`}</Tag>\n              </Link>\n            ))}\n          </p>\n          <h2 className={styles.title}>\n            {user.username}\n            &apos;s Posts\n          </h2>\n        </div>\n        <PostList posts={posts} />\n      </>\n    );\n  }\n}\n\nProfile.propTypes = {\n  fetchUser: PropTypes.func,\n  posts: PropTypes.arrayOf(PropTypes.object),\n  user: PropTypes.shape({\n    avatar: PropTypes.string,\n    city: PropTypes.string,\n    state: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object),\n    username: PropTypes.string,\n  }),\n};\n\nProfile.defaultProps = {\n  fetchUser: () => {},\n  posts: postData.filter((post) => post.user.username === 'eMediaLab'),\n  user: { ...userData[2], username: 'eMediaLab' },\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}