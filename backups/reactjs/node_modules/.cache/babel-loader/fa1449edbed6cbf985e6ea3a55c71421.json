{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/wd6-2103-VisionsICStudio/reactjs/src/pages/postForm/index.js\";\nimport 'easymde/dist/easymde.min.css';\nimport styles from './postForm.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'bloomer/lib/elements/Form/Input';\nimport SimpleMDE from 'react-simplemde-editor';\nimport ReactTags from 'react-tag-autocomplete';\nimport postData from '../../exampleData/posts.json';\nimport tagData from '../../exampleData/tags.json';\n\nclass CreatePost extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleMarkdownChange = value => {\n      this.setState({\n        content: value\n      });\n    };\n\n    this.handleInputChange = event => {\n      // pull the name of the input and value of input out of the event object\n      const {\n        target: {\n          name,\n          value\n        }\n      } = event; // update the state to a key of the name of the input and value of the value of the input\n      // ex: type: 'private'\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleDelete = i => {\n      const {\n        tags\n      } = this.state;\n      const newTags = [...tags];\n      newTags.splice(i, 1);\n      this.setState({\n        tags: newTags\n      });\n    };\n\n    this.handleAddition = tag => {\n      const {\n        post: {\n          tags: defaultTags = []\n        }\n      } = this.props;\n      const {\n        tags = defaultTags\n      } = this.state;\n      const newTags = [...tags, tag];\n      this.setState({\n        tags: newTags\n      });\n    };\n\n    this.onSubmit = () => {\n      const {\n        content,\n        tags,\n        title\n      } = this.state;\n      const {\n        history,\n        post: {\n          id\n        },\n        savePost\n      } = this.props;\n      savePost({\n        content,\n        id,\n        tags,\n        title\n      });\n      history.push('/posts');\n    };\n\n    const {\n      fetchPost,\n      match: {\n        params: {\n          postId\n        }\n      }\n    } = this.props;\n\n    if (postId) {\n      fetchPost(postId);\n    }\n\n    this.state = {};\n  }\n\n  render() {\n    const {\n      post: {\n        title: defaultTitle = '',\n        content: defaultContent = '',\n        tags: defaultTags = []\n      },\n      match: {\n        params: {\n          postId\n        }\n      },\n      suggestions\n    } = this.props;\n    const {\n      title = defaultTitle,\n      content = defaultContent,\n      tags = defaultTags\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.createPost,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.heading,\n        children: postId ? 'Edit Post' : 'Create a New Post'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        className: styles.input,\n        name: \"title\",\n        value: title,\n        onChange: this.handleInputChange,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SimpleMDE, {\n        value: content,\n        onChange: this.handleMarkdownChange,\n        options: {\n          autofocus: true,\n          previewClass: [styles.preview, 'editor-preview'],\n          spellChecker: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactTags, {\n        tags: tags,\n        suggestions: suggestions,\n        handleDelete: this.handleDelete,\n        handleAddition: this.handleAddition,\n        allowNew: true,\n        classNames: {\n          root: styles.tags,\n          rootFocused: styles.isFocused,\n          search: styles.tagsSearch,\n          searchInput: styles.tagsSearchInput,\n          selected: styles.tagsSelected,\n          selectedTag: styles.tagsSelectedTag,\n          selectedTagName: styles.tagsSelectedTagName,\n          suggestionActive: styles.isActive,\n          suggestionDisabled: styles.isDisabled,\n          suggestions: styles.tagsSuggestions\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.onSubmit,\n        className: styles.button,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCreatePost.propTypes = {\n  fetchPost: PropTypes.func,\n  post: PropTypes.shape({\n    content: PropTypes.string,\n    id: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string\n  }),\n  savePost: PropTypes.func,\n  suggestions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  }))\n};\nCreatePost.defaultProps = {\n  fetchPost: () => {},\n  post: postData[0],\n  savePost: () => {},\n  suggestions: tagData\n};\nexport default CreatePost;","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/wd6-2103-VisionsICStudio/reactjs/src/pages/postForm/index.js"],"names":["styles","React","Component","PropTypes","Input","SimpleMDE","ReactTags","postData","tagData","CreatePost","constructor","props","handleMarkdownChange","value","setState","content","handleInputChange","event","target","name","handleDelete","i","tags","state","newTags","splice","handleAddition","tag","post","defaultTags","onSubmit","title","history","id","savePost","push","fetchPost","match","params","postId","render","defaultTitle","defaultContent","suggestions","createPost","heading","input","autofocus","previewClass","preview","spellChecker","root","rootFocused","isFocused","search","tagsSearch","searchInput","tagsSearchInput","selected","tagsSelected","selectedTag","tagsSelectedTag","selectedTagName","tagsSelectedTagName","suggestionActive","isActive","suggestionDisabled","isDisabled","tagsSuggestions","button","propTypes","func","shape","string","arrayOf","object","defaultProps"],"mappings":"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","sourcesContent":["import 'easymde/dist/easymde.min.css';\nimport styles from './postForm.module.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from 'bloomer/lib/elements/Form/Input';\nimport SimpleMDE from 'react-simplemde-editor';\nimport ReactTags from 'react-tag-autocomplete';\n\nimport postData from '../../exampleData/posts.json';\nimport tagData from '../../exampleData/tags.json';\n\nclass CreatePost extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      fetchPost,\n      match: {\n        params: { postId },\n      },\n    } = this.props;\n    if (postId) {\n      fetchPost(postId);\n    }\n    this.state = {};\n  }\n\n  handleMarkdownChange = (value) => {\n    this.setState({\n      content: value,\n    });\n  };\n\n  handleInputChange = (event) => {\n    // pull the name of the input and value of input out of the event object\n    const {\n      target: { name, value },\n    } = event;\n    // update the state to a key of the name of the input and value of the value of the input\n    // ex: type: 'private'\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleDelete = (i) => {\n    const { tags } = this.state;\n    const newTags = [...tags];\n    newTags.splice(i, 1);\n    this.setState({ tags: newTags });\n  };\n\n  handleAddition = (tag) => {\n    const {\n      post: { tags: defaultTags = [] },\n    } = this.props;\n    const { tags = defaultTags } = this.state;\n    const newTags = [...tags, tag];\n    this.setState({ tags: newTags });\n  };\n\n  onSubmit = () => {\n    const { content, tags, title } = this.state;\n    const {\n      history,\n      post: { id },\n      savePost,\n    } = this.props;\n    savePost({ content, id, tags, title });\n    history.push('/posts');\n  };\n\n  render() {\n    const {\n      post: {\n        title: defaultTitle = '',\n        content: defaultContent = '',\n        tags: defaultTags = [],\n      },\n      match: {\n        params: { postId },\n      },\n      suggestions,\n    } = this.props;\n    const {\n      title = defaultTitle,\n      content = defaultContent,\n      tags = defaultTags,\n    } = this.state;\n    return (\n      <div className={styles.createPost}>\n        <h1 className={styles.heading}>\n          {postId ? 'Edit Post' : 'Create a New Post'}\n        </h1>\n        <Input\n          className={styles.input}\n          name=\"title\"\n          value={title}\n          onChange={this.handleInputChange}\n          placeholder=\"Title\"\n        />\n        <SimpleMDE\n          value={content}\n          onChange={this.handleMarkdownChange}\n          options={{\n            autofocus: true,\n            previewClass: [styles.preview, 'editor-preview'],\n            spellChecker: true,\n          }}\n        />\n        <ReactTags\n          tags={tags}\n          suggestions={suggestions}\n          handleDelete={this.handleDelete}\n          handleAddition={this.handleAddition}\n          allowNew\n          classNames={{\n            root: styles.tags,\n            rootFocused: styles.isFocused,\n            search: styles.tagsSearch,\n            searchInput: styles.tagsSearchInput,\n            selected: styles.tagsSelected,\n            selectedTag: styles.tagsSelectedTag,\n            selectedTagName: styles.tagsSelectedTagName,\n            suggestionActive: styles.isActive,\n            suggestionDisabled: styles.isDisabled,\n            suggestions: styles.tagsSuggestions,\n          }}\n        />\n        <button type=\"button\" onClick={this.onSubmit} className={styles.button}>\n          Save Post\n        </button>\n      </div>\n    );\n  }\n}\n\nCreatePost.propTypes = {\n  fetchPost: PropTypes.func,\n  post: PropTypes.shape({\n    content: PropTypes.string,\n    id: PropTypes.string,\n    tags: PropTypes.arrayOf(PropTypes.object),\n    title: PropTypes.string,\n  }),\n  savePost: PropTypes.func,\n  suggestions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n\nCreatePost.defaultProps = {\n  fetchPost: () => {},\n  post: postData[0],\n  savePost: () => {},\n  suggestions: tagData,\n};\n\nexport default CreatePost;\n"]},"metadata":{},"sourceType":"module"}