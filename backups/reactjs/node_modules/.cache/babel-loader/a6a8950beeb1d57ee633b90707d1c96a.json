{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/wd5-2107-FamilySocialApp/reactjs/src/pages/event/index.js\";\nimport styles from './event.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'bloomer';\nimport PostList from '../';\nimport eventData from '../../exampleData/events.json';\nimport examplePosts from '../../exampleData/posts.json';\nimport userData from '../../exampleData/users.json';\n\nclass Event extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onWatchClick = () => {\n      const {\n        addToWatched,\n        match: {\n          params: {\n            eventId\n          }\n        }\n      } = this.props;\n      addToWatched(eventId);\n    };\n\n    this.onStopWatchClick = () => {\n      const {\n        match: {\n          params: {\n            eventId\n          }\n        },\n        removeFromWatched\n      } = this.props;\n      removeFromWatched(eventId);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchPosts,\n      match: {\n        params: {\n          eventId\n        }\n      }\n    } = this.props;\n    fetchPosts({\n      event: eventId\n    });\n  }\n\n  render() {\n    const {\n      event,\n      posts,\n      user\n    } = this.props;\n    const alreadyWatching = user.events.find(e => e.id === event.id);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.heading,\n        children: [event.name, !alreadyWatching && /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.button,\n          onClick: this.onWatchClick,\n          children: \"Watch Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), alreadyWatching && /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.stopButton,\n          onClick: this.onStopWatchClick,\n          children: \"Stop Watching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nEvent.propTypes = {\n  addToWatched: PropTypes.func,\n  event: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  }),\n  fetchPosts: PropTypes.func,\n  posts: PropTypes.arrayOf(PropTypes.object),\n  removeFromWatched: PropTypes.func,\n  user: PropTypes.shape({\n    events: PropTypes.arrayOf(PropTypes.object)\n  })\n};\nEvent.defaultProps = {\n  addToWatched: () => {},\n  event: eventData[3],\n  fetchPosts: () => {},\n  posts: examplePosts.filter(post => post.events.filter(event => event.id === eventData[3].id).length),\n  removeFromWatched: () => {},\n  user: userData[3]\n};\nexport default Event;","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/wd5-2107-FamilySocialApp/reactjs/src/pages/event/index.js"],"names":["styles","React","Component","PropTypes","Button","PostList","eventData","examplePosts","userData","Event","onWatchClick","addToWatched","match","params","eventId","props","onStopWatchClick","removeFromWatched","componentDidMount","fetchPosts","event","render","posts","user","alreadyWatching","events","find","e","id","heading","name","button","stopButton","propTypes","func","shape","string","arrayOf","object","defaultProps","filter","post","length"],"mappings":"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","sourcesContent":["import styles from './event.module.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'bloomer';\n\nimport PostList from '../';\nimport eventData from '../../exampleData/events.json';\nimport examplePosts from '../../exampleData/posts.json';\nimport userData from '../../exampleData/users.json';\n\nclass Event extends Component {\n  componentDidMount() {\n    const {\n      fetchPosts,\n      match: {\n        params: { eventId },\n      },\n    } = this.props;\n    fetchPosts({ event: eventId });\n  }\n\n  onWatchClick = () => {\n    const {\n      addToWatched,\n      match: {\n        params: { eventId },\n      },\n    } = this.props;\n    addToWatched(eventId);\n  };\n\n  onStopWatchClick = () => {\n    const {\n      match: {\n        params: { eventId },\n      },\n      removeFromWatched,\n    } = this.props;\n    removeFromWatched(eventId);\n  };\n\n  render() {\n    const { event, posts, user } = this.props;\n    const alreadyWatching = user.events.find((e) => e.id === event.id);\n    return (\n      <>\n        <h1 className={styles.heading}>\n          {event.name}\n          {!alreadyWatching && (\n            <Button className={styles.button} onClick={this.onWatchClick}>\n              Watch Event\n            </Button>\n          )}\n          {alreadyWatching && (\n            <Button\n              className={styles.stopButton}\n              onClick={this.onStopWatchClick}\n            >\n              Stop Watching\n            </Button>\n          )}\n        </h1>\n\n        <PostList posts={posts} />\n      </>\n    );\n  }\n}\n\nEvent.propTypes = {\n  addToWatched: PropTypes.func,\n  event: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  fetchPosts: PropTypes.func,\n  posts: PropTypes.arrayOf(PropTypes.object),\n  removeFromWatched: PropTypes.func,\n  user: PropTypes.shape({\n    events: PropTypes.arrayOf(PropTypes.object),\n  }),\n};\n\nEvent.defaultProps = {\n  addToWatched: () => {},\n  event: eventData[3],\n  fetchPosts: () => {},\n  posts: examplePosts.filter(\n    (post) => post.events.filter((event) => event.id === eventData[3].id).length\n  ),\n  removeFromWatched: () => {},\n  user: userData[3],\n};\n\nexport default Event;\n"]},"metadata":{},"sourceType":"module"}