{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/FullSailUniversity/wd6-2103-VisionsICStudio/reactjs/src/pages/tags/index.js\";\nimport styles from './tags.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'bloomer';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport tagData from '../../exampleData/tags.json';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      // pull the name of the input and value of input out of the event object\n      const {\n        target: {\n          name,\n          value\n        }\n      } = event; // update the state to a key of the name of the input and value of the value of the input\n      // ex: type: 'private'\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      searchFilter: ''\n    };\n  }\n\n  render() {\n    const {\n      tags\n    } = this.props;\n    const {\n      searchFilter\n    } = this.state;\n    const filteredTags = tags.filter(tag => {\n      if (!searchFilter) return true;\n      const search = searchFilter.toLowerCase();\n      return tag.name.toLowerCase().indexOf(search) !== -1;\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.searchBar,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.searchBarIcon,\n          src: \"/search_icon.svg\",\n          alt: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles.searchBarInput,\n          name: \"searchFilter\",\n          onChange: this.handleInputChange,\n          placeholder: \"filter tags\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.tags,\n        children: filteredTags.map(tag => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.tag,\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            isSize: \"large\",\n            className: `fa ${tag.icon}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: styles.data,\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/tags/${tag.id}`,\n              className: styles.tagTitle,\n              children: tag.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.meta,\n              children: `${tag.count} Posts`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles.meta,\n              children: `Last post was ${moment(tag.lastPostAt).fromNow()}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)]\n        }, tag.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nUsers.propTypes = {\n  tags: PropTypes.arrayOf(PropTypes.shape({\n    count: PropTypes.number,\n    icon: PropTypes.string,\n    name: PropTypes.string\n  }))\n};\nUsers.defaultProps = {\n  tags: tagData\n};\nexport default Users;","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/FullSailUniversity/wd6-2103-VisionsICStudio/reactjs/src/pages/tags/index.js"],"names":["styles","React","Component","PropTypes","Icon","moment","Link","tagData","Users","constructor","props","handleInputChange","event","target","name","value","setState","state","searchFilter","render","tags","filteredTags","filter","tag","search","toLowerCase","indexOf","searchBar","searchBarIcon","searchBarInput","map","icon","data","id","tagTitle","meta","count","lastPostAt","fromNow","propTypes","arrayOf","shape","number","string","defaultProps"],"mappings":"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","sourcesContent":["import styles from './tags.module.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Icon } from 'bloomer';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\nimport tagData from '../../exampleData/tags.json';\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchFilter: '',\n    };\n  }\n\n  handleInputChange = (event) => {\n    // pull the name of the input and value of input out of the event object\n    const {\n      target: { name, value },\n    } = event;\n    // update the state to a key of the name of the input and value of the value of the input\n    // ex: type: 'private'\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    const { tags } = this.props;\n    const { searchFilter } = this.state;\n\n    const filteredTags = tags.filter((tag) => {\n      if (!searchFilter) return true;\n      const search = searchFilter.toLowerCase();\n      return tag.name.toLowerCase().indexOf(search) !== -1;\n    });\n\n    return (\n      <>\n        <div className={styles.searchBar}>\n          <img\n            className={styles.searchBarIcon}\n            src=\"/search_icon.svg\"\n            alt=\"search\"\n          />\n          <input\n            className={styles.searchBarInput}\n            name=\"searchFilter\"\n            onChange={this.handleInputChange}\n            placeholder=\"filter tags\"\n          />\n        </div>\n        <div className={styles.tags}>\n          {filteredTags.map((tag) => (\n            <div className={styles.tag} key={tag.id}>\n              <Icon isSize=\"large\" className={`fa ${tag.icon}`} />\n              <span className={styles.data}>\n                <Link to={`/tags/${tag.id}`} className={styles.tagTitle}>\n                  {tag.name}\n                </Link>\n                <span className={styles.meta}>{`${tag.count} Posts`}</span>\n                <span className={styles.meta}>\n                  {`Last post was ${moment(tag.lastPostAt).fromNow()}`}\n                </span>\n              </span>\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n}\nUsers.propTypes = {\n  tags: PropTypes.arrayOf(\n    PropTypes.shape({\n      count: PropTypes.number,\n      icon: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ),\n};\n\nUsers.defaultProps = {\n  tags: tagData,\n};\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}