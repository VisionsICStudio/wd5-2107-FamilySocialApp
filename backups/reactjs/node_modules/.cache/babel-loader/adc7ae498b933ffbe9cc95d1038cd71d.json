{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aaronwilson/Desktop/wd6-2103-VisionsICStudio/reactjs/src/pages/tag/index.js\";\nimport styles from './tag.module.css';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'bloomer';\nimport PostList from '../../components/postList';\nimport examplePosts from '../../exampleData/posts.json';\nimport tagData from '../../exampleData/tags.json';\nimport userData from '../../exampleData/users';\n\nclass Tag extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onWatchClick = () => {\n      const {\n        addToWatched,\n        match: {\n          params: {\n            tagId\n          }\n        }\n      } = this.props;\n      addToWatched(tagId);\n    };\n\n    this.onStopWatchClick = () => {\n      const {\n        match: {\n          params: {\n            tagId\n          }\n        },\n        removeFromWatched\n      } = this.props;\n      removeFromWatched(tagId);\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchPosts,\n      match: {\n        params: {\n          tagId\n        }\n      }\n    } = this.props;\n    fetchPosts({\n      tag: tagId\n    });\n  }\n\n  render() {\n    const {\n      posts,\n      tag,\n      user\n    } = this.props;\n    const alreadyWatching = user.tags.find(t => t.id === tag.id);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: styles.heading,\n        children: [tag.name, !alreadyWatching && /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.button,\n          onClick: this.onWatchClick,\n          children: \"Watch Tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), alreadyWatching && /*#__PURE__*/_jsxDEV(Button, {\n          className: styles.stopButton,\n          onClick: this.onStopWatchClick,\n          children: \"Stop Watching\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PostList, {\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nTag.propTypes = {\n  addToWatched: PropTypes.func,\n  fetchPosts: PropTypes.func,\n  posts: PropTypes.arrayOf(PropTypes.object),\n  removeFromWatched: PropTypes.func,\n  tag: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string\n  }),\n  user: PropTypes.shape({\n    tags: PropTypes.arrayOf(PropTypes.object)\n  })\n};\nTag.defaultProps = {\n  addToWatched: () => {},\n  fetchPosts: () => {},\n  posts: examplePosts.filter(post => post.tags.filter(t => t.id === tagData[3].id).length),\n  removeFromWatched: () => {},\n  tag: tagData[3],\n  user: userData[3]\n};\nexport default Tag;","map":{"version":3,"sources":["/Users/aaronwilson/Desktop/wd6-2103-VisionsICStudio/reactjs/src/pages/tag/index.js"],"names":["styles","React","Component","PropTypes","Button","PostList","examplePosts","tagData","userData","Tag","onWatchClick","addToWatched","match","params","tagId","props","onStopWatchClick","removeFromWatched","componentDidMount","fetchPosts","tag","render","posts","user","alreadyWatching","tags","find","t","id","heading","name","button","stopButton","propTypes","func","arrayOf","object","shape","string","defaultProps","filter","post","length"],"mappings":"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","sourcesContent":["import styles from './tag.module.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'bloomer';\n\nimport PostList from '../../components/postList';\nimport examplePosts from '../../exampleData/posts.json';\nimport tagData from '../../exampleData/tags.json';\nimport userData from '../../exampleData/users';\n\nclass Tag extends Component {\n  componentDidMount() {\n    const {\n      fetchPosts,\n      match: {\n        params: { tagId },\n      },\n    } = this.props;\n    fetchPosts({ tag: tagId });\n  }\n\n  onWatchClick = () => {\n    const {\n      addToWatched,\n      match: {\n        params: { tagId },\n      },\n    } = this.props;\n    addToWatched(tagId);\n  };\n\n  onStopWatchClick = () => {\n    const {\n      match: {\n        params: { tagId },\n      },\n      removeFromWatched,\n    } = this.props;\n    removeFromWatched(tagId);\n  };\n\n  render() {\n    const { posts, tag, user } = this.props;\n    const alreadyWatching = user.tags.find((t) => t.id === tag.id);\n    return (\n      <>\n        <h1 className={styles.heading}>\n          {tag.name}\n          {!alreadyWatching && (\n            <Button className={styles.button} onClick={this.onWatchClick}>\n              Watch Tag\n            </Button>\n          )}\n          {alreadyWatching && (\n            <Button\n              className={styles.stopButton}\n              onClick={this.onStopWatchClick}\n            >\n              Stop Watching\n            </Button>\n          )}\n        </h1>\n\n        <PostList posts={posts} />\n      </>\n    );\n  }\n}\n\nTag.propTypes = {\n  addToWatched: PropTypes.func,\n  fetchPosts: PropTypes.func,\n  posts: PropTypes.arrayOf(PropTypes.object),\n  removeFromWatched: PropTypes.func,\n  tag: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n  }),\n  user: PropTypes.shape({\n    tags: PropTypes.arrayOf(PropTypes.object),\n  }),\n};\n\nTag.defaultProps = {\n  addToWatched: () => {},\n  fetchPosts: () => {},\n  posts: examplePosts.filter(\n    (post) => post.tags.filter((t) => t.id === tagData[3].id).length\n  ),\n  removeFromWatched: () => {},\n  tag: tagData[3],\n  user: userData[3],\n};\n\nexport default Tag;\n"]},"metadata":{},"sourceType":"module"}